{"version":3,"sources":["init.js","components/accordion.js","components/groupSlider.js","components/mobileMenu.js","components/mobileMenuDropdown.js","components/modal.js","components/slider.js","components/sticky-header.js","components/tab.js"],"names":["document","addEventListener","e","Sliders","GroupSlider","Modals","Tab","Accordion","StickyHeader","MobileMenu","MobileMenuDropdown","_classCallCheck","this","accordions","querySelectorAll","arrayAccordions","Array","from","accordionNames","map","list","getAttribute","isHasDuplicates","Error","activeClass","start","length","_toConsumableArray","Set","_this","forEach","name","place","querySelector","concat","triggers","contents","setListener","_ref","_this2","trigger","triggerIndex","handler","index","_ref2","_this3","classList","value","match","RegExp","removeClass","addClass","el","add","remove","sliders","arraySliders","slidersNames","slidersData","setSlidersData","initSliders","slider","arrowPrev","arrowNext","data","hasArrows","push","item","$list","$","slidesToShow","attr","parseInt","options","slidesToScroll","dots","arrows","infinite","responsive","breakpoint","settings","adaptiveHeight","prevArrow","nextArrow","slick","content","status","cssClasses","active","triggerHeader","init","listener","handleClick","close","open","body","style","overflow","listeners","toggle","modals","arrayModals","modalsNames","modalContent","modalTriggers","action","on","setPositionArrows","firstChildren","children","first","window","innerWidth","positionTop","height","top","header","startOffset","cssFixedClass","setOptions","scrollHandler","innerHeight","condition","scrollY","setHeaderSticky","paddingTop","getBoundingClientRect","tabs","arrayTabs","tabsNames"],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', e => {\r\n    new Sliders()\r\n    new GroupSlider()\r\n    new Modals()\r\n    new Tab()\r\n    new Accordion()\r\n    new StickyHeader()\r\n    new MobileMenu()\r\n    new MobileMenuDropdown()\r\n})","class Accordion {\r\n    constructor() {\r\n        this.accordions = document.querySelectorAll('[data-accordion]')\r\n        this.arrayAccordions = Array.from(this.accordions)\r\n        this.accordionNames = this.arrayAccordions.map(list => list.getAttribute('data-accordion'))\r\n        if(this.isHasDuplicates()){\r\n            throw new Error('Accordions \"names\" have duplicates\\n\\rPlease change them')\r\n        }\r\n        this.activeClass = 'active'\r\n\r\n        this.start()\r\n    }\r\n\r\n    isHasDuplicates(){\r\n        return this.accordionNames.length !== [...new Set(this.accordionNames)].length\r\n    }\r\n\r\n    start(){\r\n        this.accordionNames.forEach(name => {\r\n            const place = document.querySelector(`[data-accordion=\"${name}\"]`)\r\n            const triggers = place.querySelectorAll('[data-accordion-trigger]')\r\n            const contents = place.querySelectorAll('[data-accordion-content]')\r\n            if(triggers.length !== contents.length) {\r\n                throw new Error('Number of triggers not equal to number of content blocks')\r\n            }\r\n            this.setListener({\r\n                triggers,\r\n                contents\r\n            })\r\n        })\r\n    }\r\n\r\n    setListener({triggers, contents}){\r\n        triggers.forEach((trigger, triggerIndex) => {\r\n            trigger.addEventListener('click', e => {\r\n                this.handler({\r\n                    triggers,\r\n                    contents,\r\n                    index: triggerIndex\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    handler({triggers, contents, index}){\r\n        triggers.forEach((trigger, triggerIndex) => {\r\n            if(triggerIndex === index) {\r\n                if(!!trigger.classList.value.match(new RegExp(this.activeClass))){\r\n                    this.removeClass(trigger)\r\n                    this.removeClass(contents[triggerIndex])\r\n                }else{\r\n                    this.addClass(trigger)\r\n                    this.addClass(contents[triggerIndex])\r\n                }\r\n            }else{\r\n                this.removeClass(trigger)\r\n                this.removeClass(contents[triggerIndex])\r\n            }\r\n        })\r\n    }\r\n\r\n    addClass(el){\r\n        el.classList.add(this.activeClass)\r\n    }\r\n\r\n    removeClass(el){\r\n        el.classList.remove(this.activeClass)\r\n    }\r\n}","class GroupSlider {\r\n    constructor() {\r\n        this.sliders = document.querySelectorAll('[data-group-slider-list]')\r\n        this.arraySliders = Array.from(this.sliders)\r\n        this.slidersNames = this.arraySliders.map(list => list.getAttribute('data-group-slider-list'))\r\n        if (this.isHasDuplicates()) {\r\n            throw new Error('Sliders \"names\" have duplicates\\n\\rPlease change them')\r\n        }\r\n\r\n        this.slidersData = []\r\n\r\n        this.setSlidersData()\r\n\r\n        this.initSliders()\r\n    }\r\n\r\n    isHasDuplicates() {\r\n        return this.slidersNames.length !== [...new Set(this.slidersNames)].length\r\n    }\r\n\r\n    setSlidersData() {\r\n        this.arraySliders.forEach(slider => {\r\n            const name = slider.getAttribute('data-group-slider-list')\r\n            const arrowPrev = document.querySelector(`[data-group-slider-arrow-prev=\"${name}\"]`)\r\n            const arrowNext = document.querySelector(`[data-group-slider-arrow-next=\"${name}\"]`)\r\n            const hasArrows = !!arrowNext && !!arrowPrev\r\n\r\n            const data = {\r\n                name,\r\n                hasArrows,\r\n                arrowPrev,\r\n                arrowNext,\r\n                list: slider\r\n            }\r\n            this.slidersData.push(data)\r\n        })\r\n    }\r\n\r\n    initSliders() {\r\n        this.slidersData.forEach(item => {\r\n            const $list = $(item.list)\r\n            const slidesToShow = $list.attr('data-slide-to-show') ? parseInt($list.attr('data-slide-to-show')) : 3\r\n\r\n            const options = {\r\n                slidesToScroll: slidesToShow,\r\n                slidesToShow,\r\n                dots: true,\r\n                arrows: item.hasArrows,\r\n                infinite: false,\r\n                responsive: [\r\n                    {\r\n                        breakpoint: 780,\r\n                        settings: {\r\n                            slidesToScroll: slidesToShow - 1,\r\n                            slidesToShow: slidesToShow - 1,\r\n                        }\r\n                    }\r\n                ],\r\n                adaptiveHeight: true\r\n            }\r\n\r\n            if (item.hasArrows) {\r\n                options.prevArrow = item.arrowPrev\r\n                options.nextArrow = item.arrowNext\r\n            }\r\n\r\n            $list.slick(options)\r\n        })\r\n    }\r\n}","class MobileMenu {\r\n    constructor() {\r\n        this.triggers = document.querySelectorAll('[data-mobile-menu-trigger]')\r\n        this.content = document.querySelector('[data-mobile-menu-content]')\r\n        if(!this.content) throw new Error(`Selector with attr '[data-mobile-menu-content]' not found`)\r\n        this.status = false\r\n        this.cssClasses = {\r\n            content: {\r\n                active: 'b-mobile-menu_active'\r\n            },\r\n            triggerHeader: {\r\n                active: 'b-header__mobile-menu-trigger_active'\r\n            }\r\n        }\r\n\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.listener()\r\n    }\r\n\r\n    listener() {\r\n        Array.from(this.triggers).forEach(trigger => {\r\n            trigger.addEventListener('click', () => {\r\n                this.handleClick()\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClick() {\r\n        if (this.status) {\r\n            this.close()\r\n        } else {\r\n            this.open()\r\n        }\r\n    }\r\n\r\n    open() {\r\n        document.body.style.overflow = 'hidden'\r\n        this.content.classList.add(this.cssClasses.content.active)\r\n        this.status = true\r\n\r\n        Array.from(this.triggers).forEach(trigger => {\r\n            trigger.classList.add(this.cssClasses.triggerHeader.active)\r\n        })\r\n    }\r\n\r\n    close() {\r\n        document.body.style.overflow = ''\r\n        this.content.classList.remove(this.cssClasses.content.active)\r\n        this.status = false\r\n\r\n        Array.from(this.triggers).forEach(trigger => {\r\n            trigger.classList.remove(this.cssClasses.triggerHeader.active)\r\n        })\r\n    }\r\n}","class MobileMenuDropdown {\r\n    constructor() {\r\n        this.place = document.querySelector('.b-mobile-menu__list')\r\n        this.triggers = this.place.querySelectorAll('ul > li > i')\r\n        this.contents = this.place.querySelectorAll('ul > li > ul')\r\n        if(\r\n            this.triggers.length !==\r\n            this.contents.length\r\n        ) throw new Error('Triggers length and contents length not equal')\r\n\r\n        this.cssClasses = {\r\n            trigger: {\r\n                active: 'active'\r\n            },\r\n            content: {\r\n                active: 'active'\r\n            }\r\n        }\r\n\r\n        this.init()\r\n    }\r\n\r\n    init(){\r\n        this.listeners()\r\n    }\r\n\r\n    listeners(){\r\n        Array.from(this.triggers).forEach((trigger, index) => {\r\n            trigger.addEventListener('click', () => {\r\n                this.handleClick(index)\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClick(index){\r\n        this.toggle(index)\r\n    }\r\n\r\n    toggle(index){\r\n        this.triggers[index].classList.toggle(this.cssClasses.trigger.active)\r\n        this.contents[index].classList.toggle(this.cssClasses.content.active)\r\n    }\r\n}","class Modals{\r\n    constructor() {\r\n        this.modals = document.querySelectorAll('[data-modal-content]')\r\n        this.arrayModals = Array.from(this.modals)\r\n        this.modalsNames = this.arrayModals.map(list => list.getAttribute('data-modal-content'))\r\n        if(this.isHasDuplicates()){\r\n            throw new Error('Modals \"names\" have duplicates\\n\\rPlease change them')\r\n        }\r\n\r\n        this.init()\r\n    }\r\n    isHasDuplicates(){\r\n        return this.modalsNames.length !== [...new Set(this.modalsNames)].length\r\n    }\r\n    init(){\r\n        this.modalsNames.forEach(name => {\r\n            const modalContent = document.querySelector(`[data-modal-content=\"${name}\"]`)\r\n            const modalTriggers = document.querySelectorAll(`[data-modal-trigger=\"${name}\"]`)\r\n            Array.from(modalTriggers).forEach(trigger => {\r\n                trigger.addEventListener('click', e => {\r\n                    this.action(modalContent)\r\n                })\r\n            })\r\n        })\r\n    }\r\n    action(content){\r\n        content.classList.toggle('active')\r\n        document.body.classList.toggle('hidden')\r\n    }\r\n}","class Sliders {\r\n    constructor() {\r\n        this.sliders = document.querySelectorAll('[data-slider-list]')\r\n        this.arraySliders = Array.from(this.sliders)\r\n        this.slidersNames = this.arraySliders.map(list => list.getAttribute('data-slider-list'))\r\n        if (this.isHasDuplicates()) {\r\n            throw new Error('Sliders \"names\" have duplicates\\n\\rPlease change them')\r\n        }\r\n\r\n        this.slidersData = []\r\n\r\n        this.setSlidersData()\r\n\r\n        this.initSliders()\r\n    }\r\n\r\n    isHasDuplicates() {\r\n        return this.slidersNames.length !== [...new Set(this.slidersNames)].length\r\n    }\r\n\r\n    setSlidersData() {\r\n        this.arraySliders.forEach(slider => {\r\n            const name = slider.getAttribute('data-slider-list')\r\n            const arrowPrev = document.querySelector(`[data-slider-arrow-prev=\"${name}\"]`)\r\n            const arrowNext = document.querySelector(`[data-slider-arrow-next=\"${name}\"]`)\r\n            const hasArrows = !!arrowNext && !!arrowPrev\r\n\r\n            const data = {\r\n                name,\r\n                hasArrows,\r\n                arrowPrev,\r\n                arrowNext,\r\n                list: slider\r\n            }\r\n            this.slidersData.push(data)\r\n        })\r\n    }\r\n\r\n    initSliders() {\r\n        this.slidersData.forEach(item => {\r\n            const $list = $(item.list)\r\n\r\n            const options = {\r\n                slidesToScroll: 1,\r\n                slidesToShow: 1,\r\n                dots: true,\r\n                arrows: item.hasArrows,\r\n                infinite: true,\r\n                responsive: [],\r\n                adaptiveHeight: true\r\n            }\r\n\r\n            if (item.hasArrows) {\r\n                options.prevArrow = item.arrowPrev\r\n                options.nextArrow = item.arrowNext\r\n            }\r\n\r\n            $list.on('init', e => {\r\n                if (item.hasArrows) {\r\n                    this.setPositionArrows({\r\n                        arrowPrev: item.arrowPrev,\r\n                        arrowNext: item.arrowNext,\r\n                        firstChildren: $list.children().first()\r\n                    })\r\n                    window.addEventListener('resize', e => {\r\n                        this.setPositionArrows({\r\n                            arrowPrev: item.arrowPrev,\r\n                            arrowNext: item.arrowNext,\r\n                            firstChildren: $list.children().first()\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n\r\n            $list.slick(options)\r\n\r\n            document.addEventListener('resize', e => {\r\n                if (window.innerWidth >= 560) {\r\n                    $list.slick('reinit');\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    setPositionArrows({arrowPrev, arrowNext, firstChildren}) {\r\n        const height = firstChildren.height()\r\n        const positionTop = height / 2\r\n        arrowPrev.style.top = `${positionTop}px`\r\n        arrowNext.style.top = `${positionTop}px`\r\n    }\r\n}","class StickyHeader{\r\n    constructor() {\r\n        this.header = document.querySelector('.b-header')\r\n        this.options = {\r\n            startOffset: null\r\n        }\r\n\r\n        this.cssFixedClass = 'b-header_fixed'\r\n\r\n        this.start()\r\n    }\r\n    start(){\r\n        this.setOptions()\r\n        this.listeners()\r\n    }\r\n    listeners(){\r\n        window.addEventListener('scroll', e => {\r\n            this.scrollHandler()\r\n        })\r\n        window.addEventListener('resize', e => {\r\n           this.setOptions()\r\n        })\r\n    }\r\n    setOptions(){\r\n        this.options.startOffset = window.innerHeight / 2\r\n    }\r\n    scrollHandler(){\r\n        const condition = window.scrollY >= this.options.startOffset\r\n        this.setHeaderSticky(condition)\r\n    }\r\n    setHeaderSticky(condition){\r\n        if(condition){\r\n            this.header.classList.add(this.cssFixedClass)\r\n\r\n            document.body.style.paddingTop = `${this.header.getBoundingClientRect().height}px`\r\n        }else{\r\n            this.header.classList.remove(this.cssFixedClass)\r\n\r\n            document.body.style.paddingTop = ''\r\n        }\r\n    }\r\n}","class Tab {\r\n    constructor() {\r\n        this.tabs = document.querySelectorAll('[data-tab]')\r\n        this.arrayTabs = Array.from(this.tabs)\r\n        this.tabsNames = this.arrayTabs.map(list => list.getAttribute('data-tab'))\r\n        if(this.isHasDuplicates()){\r\n            throw new Error('Tabs \"names\" have duplicates\\n\\rPlease change them')\r\n        }\r\n        this.activeClass = 'active'\r\n\r\n        this.start()\r\n    }\r\n    isHasDuplicates(){\r\n        return this.tabsNames.length !== [...new Set(this.tabsNames)].length\r\n    }\r\n    start(){\r\n        this.tabsNames.forEach(name => {\r\n            const place = document.querySelector(`[data-tab=\"${name}\"]`)\r\n            const triggers = place.querySelectorAll('[data-tab-trigger]')\r\n            const contents = place.querySelectorAll('[data-tab-content]')\r\n            if(triggers.length !== contents.length) {\r\n                throw new Error('Number of triggers not equal to number of content blocks')\r\n            }\r\n            this.setListener({\r\n                triggers,\r\n                contents\r\n            })\r\n        })\r\n    }\r\n    setListener({triggers, contents}){\r\n        triggers.forEach((trigger, triggerIndex) => {\r\n            trigger.addEventListener('click', e => {\r\n                this.handler({\r\n                    triggers,\r\n                    contents,\r\n                    index: triggerIndex\r\n                })\r\n            })\r\n        })\r\n    }\r\n    handler({triggers, contents, index}){\r\n        triggers.forEach((trigger, triggerIndex) => {\r\n            if(triggerIndex === index) {\r\n                if(!!trigger.classList.value.match(new RegExp(this.activeClass))){\r\n                    this.removeClass(trigger)\r\n                    this.removeClass(contents[triggerIndex])\r\n                }else{\r\n                    this.addClass(trigger)\r\n                    this.addClass(contents[triggerIndex])\r\n                }\r\n            }else{\r\n                this.removeClass(trigger)\r\n                this.removeClass(contents[triggerIndex])\r\n            }\r\n        })\r\n    }\r\n    addClass(el){\r\n        el.classList.add(this.activeClass)\r\n    }\r\n    removeClass(el){\r\n        el.classList.remove(this.activeClass)\r\n    }\r\n}"]}